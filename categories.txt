[ES] = skipped by electron
[RM] = removed

# Try First

missing socket.on('data') event when data received after socket.end():
- test-tls-net-socket-keepalive.js

getTLSPeerFinishedMessage not working right? and same for getFinished
- test-tls-finished.js

SNICallback not supported: (#17932, #14395, #6749, #4053) (kai)
- test-tls-starttls-server.js
- test-tls-socket-snicallback-without-server.js
- test-tls-snicallback-error.js
- test-tls-sni-option.js
- test-tls-sni-servername.js
- test-tls-empty-sni-context.js
- checkServerIdentity called with 'undefined' for 'cert', throws: test-tls-empty-sni-context.js

No cipher match: (look at electron? openssl.c)
- [ES] no cipher match: test-tls-multi-pfx, test-tls-psk-errors
- no cipher match: test-tls-connect-stream-writes.js
- [ES] errors with 'no cipher match' rather than 'key too small'. '@SECLEVEL=0' does not work: test-tls-reduced-SECLEVEL-in-cipher.js
- errors with 'no cipher match' rather than a DeprecationWarning for ip servername: test-tls-ip-servername-deprecation.js
connect() callback never called when invalid pfx provided: test-tls-invalid-pfx.js

SecureContext: impl in c++? wrap us socket context. we have InternalSecureContext.

Is ncrypt used in node tls, do we need to update it?

# More

- [ES] bun gets error ECONNREFUSED but node gets write EPROTO & allows process exit: test-tls-junk-server
- different cipher list, support --tls-cipher-list: test-tls-cipher-list
- after 'client wrote data', bufferSize was 0 when node has it '1': test-tls-buffersize
- node never trips `ret !== false` branch: test-tlsp-ause.js
- [ES] cluster stuff: test-tls-ticket-cluster
- [ES] ServerHandlers handshake() doesn't disconect for non-ECONNRESEET error? test-tls-hello-parser-failure.js
- takes 18s in bun but 300ms in node: test-gc-tls-external-memory.js
- client.on("session") never called?: test-tls-secure-session.js
- [ES] overwrites duplex and emits custom connection event? test-tls-handshake-exception.js
- missing '_tlsError' event: test-tls-delayed-attach-error.js
- tls.setTicketKeys is 'Not implemented in Bun yet': test-tls-ticket-invalid-arg.js
- [ES] getCertificate() returns undefined: test-tls-pfx-authorizationerror.js
- [ES] test-tls-socket-failed-handshake-emits-error.js

SecureContext:
- missing addCACert: test-tls-addca

createSecurePair not implemented:
These tests are removed in new node versions: (createSecurePair is deprecated)
- [RM] test-tls-securepair-fiftharg.js
- [RM] test-tls-securepair-leak.js
- [RM] test-tls-legacy-deprecated.js

# Pass on mac

- [ES] test-tls-junk-closes-server
- test-tls-onread-static-buffer
- test-tls-lookup
- test-tls-wrap-econnreset-pipe

# Attempted

http.request errors because it passes port but no host and path as `localhost:${port}`. _http_client concatenates
that to `localhost:${port}localhost:${port}` which is an invalid url
- test-tls-over-http-tunnel.js
- the problem is that sending an http request with path `abcd` will do `GET abcd HTTP/1.1`, but
  fetch `url.com/abcd` is `GET /abcd HTTP/1.1`. skipping the slash is invalid anyway and node's http server doesn't
  accept it. but net does.
- http_client in bun is implemented with fetch which doesn't let you send a malformed http request
- this might be unintentional? unclear

[ES] test-tls-disable-renegotiation.js:
- missing ERR_INVALID_ARG_TYPE for client.renegotiate()
- OpenSSL function should not have been called via OPENSSL_internal SSL routines
- The error is emitted at: <https://github.com/google/boringssl/blob/035e720641f385e82c72b7b0a9e1d89e58cb5ed5/ssl/ssl_lib.cc#L1629>
- marked as 'caller-initiated renegotiation is not supported'. you can't renegotiate unless a renegotiation is already pending.

test-tls-js-stream.js:
- connection closes earlier than expected?

# Skipped by electron

these tests are disabled by electron: (https://github.com/electron/electron/blob/main/script/node-disabled-tests.json)
  "parallel/test-tls-alpn-server-client",
  "parallel/test-tls-cli-min-version-1.0",
  "parallel/test-tls-cli-max-version-1.2",
  "parallel/test-tls-cli-max-version-1.3",
  "parallel/test-tls-cli-min-version-1.1",
  "parallel/test-tls-cli-min-version-1.2",
  "parallel/test-tls-cli-min-version-1.3",
  "parallel/test-tls-client-auth",
  "parallel/test-tls-client-getephemeralkeyinfo",
  "parallel/test-tls-client-mindhsize",
  "parallel/test-tls-client-reject",
  "parallel/test-tls-client-renegotiation-13",
  "parallel/test-tls-cnnic-whitelist",
  "parallel/test-tls-disable-renegotiation",
  "parallel/test-tls-empty-sni-context",
  "parallel/test-tls-error-stack",
  "parallel/test-tls-finished",
  "parallel/test-tls-generic-stream",
  "parallel/test-tls-getcipher",
  "parallel/test-tls-getprotocol",
  "parallel/test-tls-handshake-error",
  "parallel/test-tls-handshake-exception",
  "parallel/test-tls-hello-parser-failure",
  "parallel/test-tls-honorcipherorder",
  "parallel/test-tls-junk-closes-server",
  "parallel/test-tls-junk-server",
  "parallel/test-tls-key-mismatch",
  "parallel/test-tls-max-send-fragment",
  "parallel/test-tls-min-max-version",
  "parallel/test-tls-multi-key",
  "parallel/test-tls-multi-pfx",
  "parallel/test-tls-no-cert-required",
  "parallel/test-tls-options-boolean-check",
  "parallel/test-tls-passphrase",
  "parallel/test-tls-peer-certificate",
  "parallel/test-tls-pfx-authorizationerror",
  "parallel/test-tls-psk-circuit",
  "parallel/test-tls-reduced-SECLEVEL-in-cipher",
  "parallel/test-tls-root-certificates",
  "parallel/test-tls-server-failed-handshake-emits-clienterror",
  "parallel/test-tls-set-ciphers",
  "parallel/test-tls-set-ciphers-error",
  "parallel/test-tls-set-sigalgs",
  "parallel/test-tls-socket-allow-half-open-option",
  "parallel/test-tls-socket-failed-handshake-emits-error",
  "parallel/test-tls-ticket",
  "parallel/test-tls-ticket-cluster",